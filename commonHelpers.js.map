{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from \"flatpickr\";\nimport iziToast from 'izitoast';\n\n\nconst startButton = document.querySelector('[data-start]'),\ndataDays = document.querySelector('span[data-days]'),\ndataHours = document.querySelector('span[data-hours]'),\ndataMinutes = document.querySelector('span[data-minutes]'),\ndataSeconds = document.querySelector('span[data-seconds]')\n\nstartButton.disabled = true;\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] > new Date()) {\n            userSelectedDate = selectedDates[0];\n            startButton.disabled = false;\n          } else {\n            iziToast.show({\n              icon: 'icon-error',\n              backgroundColor: '#FC5A5A',\n              message: 'Please choose a date in the future',\n              messageColor: '#FAFAFB',\n              messageSize: '16px',\n              position: 'topCenter',\n              close: false,\n            });\n            startButton.disabled = true;\n          }\n        },\n      };\n\n  flatpickr(\"#datetime-picker\", options);\n\n  startButton.addEventListener('click', event => {\n    const timer = setInterval(() => {\n        startButton.disabled = true;\n      const timeDiff = userSelectedDate - Date.now();\n      const timerDate = convertMs(timeDiff);\n      if (timeDiff <= 0) {\n        clearInterval(timer);\n      } else {\n        dataDays.textContent = addLeadingZero(timerDate.days);\n        dataHours.textContent = addLeadingZero(timerDate.hours);\n        dataMinutes.textContent = addLeadingZero(timerDate.minutes);\n        dataSeconds.textContent = addLeadingZero(timerDate.seconds);\n      }\n    }, 1000);\n  });\n\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n  function addLeadingZero(value) {\n    let time = String(value);\n    if (time.length < 2) {\n      return time.padStart(2, '0');\n    } else {\n      return time;\n    }\n  }\n"],"names":["startButton","dataDays","dataHours","dataMinutes","dataSeconds","userSelectedDate","options","selectedDates","iziToast","flatpickr","event","timer","timeDiff","timerDate","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value","time"],"mappings":"+IAMA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACzDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAEzDJ,EAAY,SAAW,GACvB,IAAIK,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,CAAC,EAAI,IAAI,MACvBF,EAAmBE,EAAc,CAAC,EAClCP,EAAY,SAAW,KAEvBQ,EAAS,KAAK,CACZ,KAAM,aACN,gBAAiB,UACjB,QAAS,qCACT,aAAc,UACd,YAAa,OACb,SAAU,YACV,MAAO,EACrB,CAAa,EACDR,EAAY,SAAW,GAE1B,CACT,EAEES,EAAU,mBAAoBH,CAAO,EAErCN,EAAY,iBAAiB,QAASU,GAAS,CAC7C,MAAMC,EAAQ,YAAY,IAAM,CAC5BX,EAAY,SAAW,GACzB,MAAMY,EAAWP,EAAmB,KAAK,IAAG,EACtCQ,EAAYC,EAAUF,CAAQ,EAChCA,GAAY,EACd,cAAcD,CAAK,GAEnBV,EAAS,YAAcc,EAAeF,EAAU,IAAI,EACpDX,EAAU,YAAca,EAAeF,EAAU,KAAK,EACtDV,EAAY,YAAcY,EAAeF,EAAU,OAAO,EAC1DT,EAAY,YAAcW,EAAeF,EAAU,OAAO,EAE7D,EAAE,GAAI,CACX,CAAG,EAED,SAASC,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,SAASL,EAAeM,EAAO,CAC7B,IAAIC,EAAO,OAAOD,CAAK,EACvB,OAAIC,EAAK,OAAS,EACTA,EAAK,SAAS,EAAG,GAAG,EAEpBA,CAEb"}